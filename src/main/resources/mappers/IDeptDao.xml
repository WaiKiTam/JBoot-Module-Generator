<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jboot.generator.dao.IDeptDao">

    <!--基础字段返回信息配置 -->
    <resultMap id="BaseResultMap" type="org.jboot.generator.entity.DeptVO">
        <id column="deptno" jdbcType="INTEGER" property="deptno" />
        <result column="dname" jdbcType="VARCHAR" property="dname" />
        <result column="loc" jdbcType="VARCHAR" property="loc" />
    </resultMap>

    <!--基础字段信息配置 -->
    <sql id="Base_Column_List">
        `deptno`,`dname`,`loc`
    </sql>

    <!--基础条件查询配置 -->
    <sql id="Base_Where_Clause">
        <where>
            <if test="entity.deptno != null">
                and `deptno` = #{entity.deptno,jdbcType=INTEGER}
            </if>
            <if test="entity.dname != null">
                and `dname` = #{entity.dname,jdbcType=VARCHAR}
            </if>
            <if test="entity.loc != null">
                and `loc` = #{entity.loc,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <!--构造条件 -->
    <sql id="Wrapper_Where_Clause">
        <where>
            <foreach collection="wp.criterias" item="criteria" separator="or">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criterions" item="criterion">
                         <choose>
                            <when test="criterion.attr == 'deptno'">
                                and `deptno`
                                <include refid="Wrapper_Op_Clause" />
                            </when>
                            <when test="criterion.attr == 'dname'">
                                and `dname`
                                <include refid="Wrapper_Op_Clause" />
                            </when>
                            <when test="criterion.attr == 'loc'">
                                and `loc`
                                <include refid="Wrapper_Op_Clause" />
                            </when>
                            <otherwise>
                                and false
                            </otherwise>
                        </choose>
                    </foreach>
                </trim>
            </foreach>
        </where>
    </sql>

    <!--查询操作构造器 -->
    <sql id="Wrapper_Op_Clause">
        <choose>
            <when test="condition.op.type == 'eq'">
                = #{condition.value}
            </when>
            <when test="condition.op.type == 'ne'">
                != #{condition.value}
            </when>
            <when test="condition.op.type == 'gt'">
                <![CDATA[ > #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'ge'">
                <![CDATA[ >= #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'lt'">
                <![CDATA[ < #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'le'">
                <![CDATA[ <= #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'like'">
                <![CDATA[ LIKE CONCAT('%',#{condition.value},'%')]]>
            </when>
            <when test="condition.op.type == 'notLike'">
                <![CDATA[ NOT LIKE CONCAT('%',#{condition.value},'%') ]]>
            </when>
            <when test="condition.op.type == 'in'">
                = #{condition.value}
            </when>
            <when test="condition.op.type == 'notIn'">
                = #{condition.value}
            </when>
            <when test="condition.op.type == 'in'">
                in
                <foreach collection="condition.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="condition.op.type == 'notIn'">
                not in
                <foreach collection="condition.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="condition.op.type == 'between'">
                BETWEEN #{condition.value} and #{condition.secondValue}
            </when>
            <when test="condition.op.type == 'notBetween'">
                NOT BETWEEN #{condition.value} and #{condition.secondValue}
            </when>
        </choose>
    </sql>

    <!--构造排序条件 -->
    <sql id="Wrapper_Order_Clause">
        <if test="wp.sorts != null">
            <foreach collection="wp.sorts" item="st" separator=",">
                <choose>
                    <when test="st.attr == 'deptno'">
                        `deptno` #{st.order.type}
                    </when>
                    <when test="st.attr == 'dname'">
                        `dname` #{st.order.type}
                    </when>
                    <when test="st.attr == 'loc'">
                        `loc` #{st.order.type}
                    </when>
                </choose>
            </foreach>
        </if>
    </sql>

    <!--根据主键信息查询返回实体对象 -->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dept
        where `deptno` = #{deptno,jdbcType=INTEGER}
    </select>

    <!--根据实体对象信息查询返回实体对象 -->
    <select id="query">
        select
        <include refid="Base_Column_List" />
        from dept
        <include refid="Base_Where_Clause" />
    </select>

    <!--根据实体对象信息查询返回实体对象集合 -->
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dept
        <if test="_parameter != null">
            <include refid="Base_Where_Clause" />
        </if>
    </select>
    
    <!--根据主键信息删除实体对象 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from dept
        where `deptno` = #{deptno,jdbcType=INTEGER}
    </delete>
    
    <!--根据实体对象删除数据-->
    <delete id="delete" parameterType="org.jboot.generator.entity.DeptVO">
        delete from dept
        <include refid="Base_Where_Clause" />
    </delete>

    <!--根据实体对象删除数据-->
    <delete id="deletes" parameterType="org.jboot.generator.entity.DeptVO">
        delete from dept where `deptno` in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.attrName}
        </foreach>
    </delete>

    <!--插入实体对象 -->
    <insert id="insert" parameterType="org.jboot.generator.entity.DeptVO">
        insert into dept
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptno != null">
                `deptno`,
            </if>
            <if test="dname != null">
                `dname`,
            </if>
            <if test="loc != null">
                `loc`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptno != null">
                #{deptno,jdbcType=INTEGER},
            </if>
            <if test="dname != null">
                #{dname,jdbcType=VARCHAR},
            </if>
            <if test="loc != null">
                #{loc,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--插入实体对象 -->
    <insert id="inserts" parameterType="org.jboot.generator.entity.DeptVO">
        insert into dept
        <trim prefix="(" suffix=") values" suffixOverrides=",">
            `deptno`,
            `dname`,
            `loc`
        </trim>
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{deptno,jdbcType=INTEGER},
            #{dname,jdbcType=VARCHAR},
            #{loc,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--更新实体对象 -->
    <update id="update">
        update dept
        <set>
            <if test="entity.deptno != null">
                `deptno` = #{entity.deptno,jdbcType=INTEGER},
            </if>
            <if test="entity.dname != null">
                `dname` = #{entity.dname,jdbcType=VARCHAR},
            </if>
            <if test="entity.loc != null">
                `loc` = #{entity.loc,jdbcType=VARCHAR},
            </if>
        </set>
        where `deptno` = #{entity.deptno,jdbcType=INTEGER}
    </update>

    <!--构造器查询 -->
    <select id="queryByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dept
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
        </if>
    </select>
    
    <!--构造器查询 -->
    <select id="findByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dept
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
            <include refid="Wrapper_Order_Clause" />
        </if>
    </select>

    <!--更新实体对象 -->
    <update id="updateByWrapper">
        update dept
        <set>
            <if test="entity.deptno != null">
                `deptno` = #{entity.deptno,jdbcType=INTEGER},
            </if>
            <if test="entity.dname != null">
                `dname` = #{entity.dname,jdbcType=VARCHAR},
            </if>
            <if test="entity.loc != null">
                `loc` = #{entity.loc,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
        </if>
    </update>
    
    <!--根据实体对象删除数据-->
    <delete id="deleteByWrapper">
        delete from dept
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
        </if>
    </delete>

</mapper>
