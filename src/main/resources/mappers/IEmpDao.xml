<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jboot.generator.dao.IEmpDao">

    <!--基础字段返回信息配置 -->
    <resultMap id="BaseResultMap" type="org.jboot.generator.entity.EmpVO">
        <id column="empno" jdbcType="INTEGER" property="empno" />
        <result column="ename" jdbcType="VARCHAR" property="ename" />
        <result column="job" jdbcType="VARCHAR" property="job" />
        <result column="mgr" jdbcType="INTEGER" property="mgr" />
        <result column="hiredate" jdbcType="DATE" property="hiredate" />
        <result column="sal" jdbcType="VARCHAR" property="sal" />
        <result column="comm" jdbcType="VARCHAR" property="comm" />
        <result column="deptno" jdbcType="INTEGER" property="deptno" />
    </resultMap>

    <!--基础字段信息配置 -->
    <sql id="Base_Column_List">
        `empno`,`ename`,`job`,`mgr`,`hiredate`,
        `sal`,`comm`,`deptno`
    </sql>

    <!--基础条件查询配置 -->
    <sql id="Base_Where_Clause">
        <where>
            <if test="empno != null">
                and `empno` = #{entity.empno,jdbcType=INTEGER}
            </if>
            <if test="ename != null">
                and `ename` = #{entity.ename,jdbcType=VARCHAR}
            </if>
            <if test="job != null">
                and `job` = #{entity.job,jdbcType=VARCHAR}
            </if>
            <if test="mgr != null">
                and `mgr` = #{entity.mgr,jdbcType=INTEGER}
            </if>
            <if test="hiredate != null">
                and `hiredate` = #{entity.hiredate,jdbcType=DATE}
            </if>
            <if test="sal != null">
                and `sal` = #{entity.sal,jdbcType=VARCHAR}
            </if>
            <if test="comm != null">
                and `comm` = #{entity.comm,jdbcType=VARCHAR}
            </if>
            <if test="deptno != null">
                and `deptno` = #{entity.deptno,jdbcType=INTEGER}
            </if>
        </where>
    </sql>

    <!--构造条件 -->
    <sql id="Wrapper_Where_Clause">
        <where>
            <foreach collection="wp.conditions" item="condition">
                <choose>
                    <when test="condition.attr == 'empno'">
                        and `empno`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'ename'">
                        and `ename`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'job'">
                        and `job`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'mgr'">
                        and `mgr`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'hiredate'">
                        and `hiredate`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'sal'">
                        and `sal`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'comm'">
                        and `comm`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="condition.attr == 'deptno'">
                        and `deptno`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                </choose>
            </foreach>
        </where>
    </sql>

    <!--查询操作构造器 -->
    <sql id="Wrapper_Op_Clause">
        <choose>
            <when test="condition.op.type == 'eq'">
                = #{condition.value}
            </when>
            <when test="condition.op.type == 'ne'">
                != #{condition.value}
            </when>
            <when test="condition.op.type == 'gt'">
                <![CDATA[ > #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'ge'">
                <![CDATA[ >= #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'lt'">
                <![CDATA[ < #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'le'">
                <![CDATA[ <= #{condition.value} ]]>
            </when>
            <when test="condition.op.type == 'like'">
                <![CDATA[ LIKE CONCAT('%',#{condition.value},'%')]]>
            </when>
            <when test="condition.op.type == 'notLike'">
                <![CDATA[ NOT LIKE CONCAT('%',#{condition.value},'%') ]]>
            </when>
            <when test="condition.op.type == 'in'">
                = #{condition.value}
            </when>
            <when test="condition.op.type == 'notIn'">
                = #{condition.value}
            </when>
            <when test="condition.op.type == 'in'">
                in
                <foreach collection="condition.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="condition.op.type == 'notIn'">
                not in
                <foreach collection="condition.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="condition.op.type == 'between'">
                BETWEEN #{condition.value} and #{condition.secondValue}
            </when>
            <when test="condition.op.type == 'notBetween'">
                NOT BETWEEN #{condition.value} and #{condition.secondValue}
            </when>
        </choose>
    </sql>

    <!--构造排序条件 -->
    <sql id="Wrapper_Order_Clause">
        <foreach collection="wp.sorts" item="st" separator=",">
            <choose>
                <when test="st.attr == 'empno'">
                    `empno` #{st.order.type}
                </when>
                <when test="st.attr == 'ename'">
                    `ename` #{st.order.type}
                </when>
                <when test="st.attr == 'job'">
                    `job` #{st.order.type}
                </when>
                <when test="st.attr == 'mgr'">
                    `mgr` #{st.order.type}
                </when>
                <when test="st.attr == 'hiredate'">
                    `hiredate` #{st.order.type}
                </when>
                <when test="st.attr == 'sal'">
                    `sal` #{st.order.type}
                </when>
                <when test="st.attr == 'comm'">
                    `comm` #{st.order.type}
                </when>
                <when test="st.attr == 'deptno'">
                    `deptno` #{st.order.type}
                </when>
            </choose>
        </foreach>
    </sql>

    <!--根据主键信息查询返回实体对象 -->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from emp
        where `empno` = #{empno,jdbcType=INTEGER}
    </select>

    <!--根据实体对象信息查询返回实体对象 -->
    <select id="select">
        select
        <include refid="Base_Column_List" />
        from emp
        <choose>
            <when test="entity != null">
                <include refid="Base_Where_Clause" />
            </when>
            <otherwise>
                <include refid="Wrapper_Where_Clause" />
            </otherwise>
        </choose>
    </select>

    <!--根据实体对象信息查询返回实体对象集合 -->
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from emp
        <choose>
            <when test="entity != null">
                <include refid="Base_Where_Clause" />
            </when>
            <otherwise>
                <include refid="Wrapper_Where_Clause" />
            </otherwise>
        </choose>
    </select>
    
    <!--根据主键信息删除实体对象 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from emp
        where `empno` = #{empno,jdbcType=INTEGER}
    </delete>

    <!--根据实体对象删除数据-->
    <delete id="delete" parameterType="org.jboot.generator.entity.EmpVO">
        delete from emp
        <choose>
            <when test="entity != null">
                <include refid="Base_Where_Clause" />
            </when>
            <otherwise>
                <include refid="Wrapper_Where_Clause" />
            </otherwise>
        </choose>
    </delete>

    <!--根据实体对象删除数据-->
    <delete id="deletes" parameterType="org.jboot.generator.entity.EmpVO">
        delete from emp where empno in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.attrName}
        </foreach>
    </delete>

    <!--插入实体对象 -->
    <insert id="insert" parameterType="org.jboot.generator.entity.EmpVO">
        insert into emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empno != null">
                `empno`,
            </if>
            <if test="ename != null">
                `ename`,
            </if>
            <if test="job != null">
                `job`,
            </if>
            <if test="mgr != null">
                `mgr`,
            </if>
            <if test="hiredate != null">
                `hiredate`,
            </if>
            <if test="sal != null">
                `sal`,
            </if>
            <if test="comm != null">
                `comm`,
            </if>
            <if test="deptno != null">
                `deptno`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empno != null">
                #{empno,jdbcType=INTEGER},
            </if>
            <if test="ename != null">
                #{ename,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="mgr != null">
                #{mgr,jdbcType=INTEGER},
            </if>
            <if test="hiredate != null">
                #{hiredate,jdbcType=DATE},
            </if>
            <if test="sal != null">
                #{sal,jdbcType=VARCHAR},
            </if>
            <if test="comm != null">
                #{comm,jdbcType=VARCHAR},
            </if>
            <if test="deptno != null">
                #{deptno,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!--插入实体对象 -->
    <insert id="inserts" parameterType="org.jboot.generator.entity.EmpVO">
        insert into emp
        <trim prefix="(" suffix=") values" suffixOverrides=",">
            `empno`,
            `ename`,
            `job`,
            `mgr`,
            `hiredate`,
            `sal`,
            `comm`,
            `deptno`
        </trim>
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{empno,jdbcType=INTEGER},
            #{ename,jdbcType=VARCHAR},
            #{job,jdbcType=VARCHAR},
            #{mgr,jdbcType=INTEGER},
            #{hiredate,jdbcType=DATE},
            #{sal,jdbcType=VARCHAR},
            #{comm,jdbcType=VARCHAR},
            #{deptno,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <!--更新实体对象 -->
    <update id="update">
        update emp
        <set>
            <if test="empno != null">
                `empno` = #{entity.empno,jdbcType=INTEGER},
            </if>
            <if test="ename != null">
                `ename` = #{entity.ename,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                `job` = #{entity.job,jdbcType=VARCHAR},
            </if>
            <if test="mgr != null">
                `mgr` = #{entity.mgr,jdbcType=INTEGER},
            </if>
            <if test="hiredate != null">
                `hiredate` = #{entity.hiredate,jdbcType=DATE},
            </if>
            <if test="sal != null">
                `sal` = #{entity.sal,jdbcType=VARCHAR},
            </if>
            <if test="comm != null">
                `comm` = #{entity.comm,jdbcType=VARCHAR},
            </if>
            <if test="deptno != null">
                `deptno` = #{entity.deptno,jdbcType=INTEGER},
            </if>
        </set>
        <choose>
            <when test="wp != null">
                <include refid="Wrapper_Where_Clause" />
            </when>
            <otherwise>
                where `empno` = #{entity.empno,jdbcType=INTEGER}
            </otherwise>
        </choose>
    </update>

</mapper>
