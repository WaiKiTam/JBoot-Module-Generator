<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jboot.generator.dao.IUserDao">

    <!--基础字段返回信息配置 -->
    <resultMap id="BaseResultMap" type="org.jboot.generator.entity.UserVO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
        <result column="real_name" jdbcType="VARCHAR" property="realName" />
        <result column="real_name_ch" jdbcType="VARCHAR" property="realNameCh" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="birth_date" jdbcType="TIMESTAMP" property="birthDate" />
        <result column="user_types" jdbcType="VARCHAR" property="userTypes" />
        <result column="state" jdbcType="VARCHAR" property="state" />
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    </resultMap>

    <!--基础字段信息配置 -->
    <sql id="Base_Column_List">
        <choose>
            <when test="_parameter.containsKey('columns') and columns != null and columns.length>0">
                <include refid="Base_Auto_Cloumns" />
            </when>
            <otherwise>
                t.`id`,t.`user_account`,t.`real_name`,t.`real_name_ch`,t.`phone`,
                t.`password`,t.`sex`,t.`birth_date`,t.`user_types`,t.`state`,t.`last_login_time`,
                t.`created_by`,t.`created_date`,t.`last_update_by`,t.`last_update_date`
            </otherwise>
        </choose>
    </sql>

    <!--自定义字段查询 -->
    <sql id="Base_Auto_Cloumns">
        <trim prefixOverrides=",">
            <foreach collection="columns" item="column">
                <choose>
                    <when test="column == 'id'">
                        ,t.id
                    </when>
                    <when test="column == 'userAccount'">
                        ,t.user_account
                    </when>
                    <when test="column == 'realName'">
                        ,t.real_name
                    </when>
                    <when test="column == 'realNameCh'">
                        ,t.real_name_ch
                    </when>
                    <when test="column == 'phone'">
                        ,t.phone
                    </when>
                    <when test="column == 'password'">
                        ,t.password
                    </when>
                    <when test="column == 'sex'">
                        ,t.sex
                    </when>
                    <when test="column == 'birthDate'">
                        ,t.birth_date
                    </when>
                    <when test="column == 'userTypes'">
                        ,t.user_types
                    </when>
                    <when test="column == 'state'">
                        ,t.state
                    </when>
                    <when test="column == 'lastLoginTime'">
                        ,t.last_login_time
                    </when>
                    <when test="column == 'createdBy'">
                        ,t.created_by
                    </when>
                    <when test="column == 'createdDate'">
                        ,t.created_date
                    </when>
                    <when test="column == 'lastUpdateBy'">
                        ,t.last_update_by
                    </when>
                    <when test="column == 'lastUpdateDate'">
                        ,t.last_update_date
                    </when>
                </choose>
            </foreach>
        </trim>
    </sql>

    <!--基础条件查询配置 -->
    <sql id="Base_Where_Clause">
        <where>
            <if test="entity.id != null">
                and t.`id` = #{entity.id,jdbcType=VARCHAR}
            </if>
            <if test="entity.userAccount != null">
                and t.`user_account` = #{entity.userAccount,jdbcType=VARCHAR}
            </if>
            <if test="entity.realName != null">
                and t.`real_name` = #{entity.realName,jdbcType=VARCHAR}
            </if>
            <if test="entity.realNameCh != null">
                and t.`real_name_ch` = #{entity.realNameCh,jdbcType=VARCHAR}
            </if>
            <if test="entity.phone != null">
                and t.`phone` = #{entity.phone,jdbcType=VARCHAR}
            </if>
            <if test="entity.password != null">
                and t.`password` = #{entity.password,jdbcType=VARCHAR}
            </if>
            <if test="entity.sex != null">
                and t.`sex` = #{entity.sex,jdbcType=VARCHAR}
            </if>
            <if test="entity.birthDate != null">
                and t.`birth_date` = #{entity.birthDate,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.userTypes != null">
                and t.`user_types` = #{entity.userTypes,jdbcType=VARCHAR}
            </if>
            <if test="entity.state != null">
                and t.`state` = #{entity.state,jdbcType=VARCHAR}
            </if>
            <if test="entity.lastLoginTime != null">
                and t.`last_login_time` = #{entity.lastLoginTime,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.createdBy != null">
                and t.`created_by` = #{entity.createdBy,jdbcType=VARCHAR}
            </if>
            <if test="entity.createdDate != null">
                and t.`created_date` = #{entity.createdDate,jdbcType=TIMESTAMP}
            </if>
            <if test="entity.lastUpdateBy != null">
                and t.`last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR}
            </if>
            <if test="entity.lastUpdateDate != null">
                and t.`last_update_date` = #{entity.lastUpdateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>

    <!--构造条件 -->
    <sql id="Wrapper_Where_Clause">
        <where>
            <foreach collection="wp.criterias" item="criteria" separator="or">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criterions" item="criterion">
                         <include refid="Wrapper_Where_Op_Clause"></include>
                    </foreach>
                </trim>
            </foreach>
        </where>
    </sql>

    <!--构造操作条件 -->
    <sql id="Wrapper_Where_Op_Clause">
        <choose>
            <when test="criterion.op.type == 'like' or criterion.op.type == 'notLike'">
                <choose>
                    <when test="criterion.attr == 'id'">
                        and LOWER(t.`id`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'userAccount'">
                        and LOWER(t.`user_account`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'realName'">
                        and LOWER(t.`real_name`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'realNameCh'">
                        and LOWER(t.`real_name_ch`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'phone'">
                        and LOWER(t.`phone`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'password'">
                        and LOWER(t.`password`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'sex'">
                        and LOWER(t.`sex`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'birthDate'">
                        and LOWER(t.`birth_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'userTypes'">
                        and LOWER(t.`user_types`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'state'">
                        and LOWER(t.`state`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastLoginTime'">
                        and LOWER(t.`last_login_time`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdBy'">
                        and LOWER(t.`created_by`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdDate'">
                        and LOWER(t.`created_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateBy'">
                        and LOWER(t.`last_update_by`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateDate'">
                        and LOWER(t.`last_update_date`)
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <otherwise>
                        and false
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                <choose>
                    <when test="criterion.attr == 'id'">
                        and t.`id`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'userAccount'">
                        and t.`user_account`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'realName'">
                        and t.`real_name`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'realNameCh'">
                        and t.`real_name_ch`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'phone'">
                        and t.`phone`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'password'">
                        and t.`password`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'sex'">
                        and t.`sex`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'birthDate'">
                        and t.`birth_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'userTypes'">
                        and t.`user_types`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'state'">
                        and t.`state`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastLoginTime'">
                        and t.`last_login_time`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdBy'">
                        and t.`created_by`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'createdDate'">
                        and t.`created_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateBy'">
                        and t.`last_update_by`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <when test="criterion.attr == 'lastUpdateDate'">
                        and t.`last_update_date`
                        <include refid="Wrapper_Op_Clause" />
                    </when>
                    <otherwise>
                        and false
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
    </sql>

    <!--查询操作构造器 -->
    <sql id="Wrapper_Op_Clause">
        <choose>
            <when test="criterion.op.type == 'eq'">
                = #{criterion.value}
            </when>
            <when test="criterion.op.type == 'ne'">
                != #{criterion.value}
            </when>
            <when test="criterion.op.type == 'gt'">
                <![CDATA[ > #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'ge'">
                <![CDATA[ >= #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'lt'">
                <![CDATA[ < #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'le'">
                <![CDATA[ <= #{criterion.value} ]]>
            </when>
            <when test="criterion.op.type == 'like'">
                <![CDATA[ LIKE CONCAT('%',LOWER(#{criterion.value}),'%')]]>
            </when>
            <when test="criterion.op.type == 'notLike'">
                <![CDATA[ NOT LIKE CONCAT('%',LOWER(#{criterion.value}),'%') ]]>
            </when>
            <when test="criterion.op.type == 'isNull'">
                is null
            </when>
            <when test="criterion.op.type == 'isNotNull'">
                is not null
            </when>
            <when test="criterion.op.type == 'in'">
                in
                <foreach collection="criterion.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="criterion.op.type == 'notIn'">
                not in
                <foreach collection="criterion.value" item="value" separator="," open="(" close=")">
                    #{value}
                </foreach>
            </when>
            <when test="criterion.op.type == 'between'">
                BETWEEN #{criterion.value} and #{criterion.secondValue}
            </when>
            <when test="criterion.op.type == 'notBetween'">
                NOT BETWEEN #{criterion.value} and #{criterion.secondValue}
            </when>
        </choose>
    </sql>

    <!--构造排序条件 -->
    <sql id="Wrapper_Order_Clause">
        <if test="wp.sorts != null">
            <foreach collection="wp.sorts" open=" order by " item="st" separator=",">
                <choose>
                    <when test="st.attr == 'id'">
                        t.`id` ${st.order.type}
                    </when>
                    <when test="st.attr == 'userAccount'">
                        t.`user_account` ${st.order.type}
                    </when>
                    <when test="st.attr == 'realName'">
                        t.`real_name` ${st.order.type}
                    </when>
                    <when test="st.attr == 'realNameCh'">
                        t.`real_name_ch` ${st.order.type}
                    </when>
                    <when test="st.attr == 'phone'">
                        t.`phone` ${st.order.type}
                    </when>
                    <when test="st.attr == 'password'">
                        t.`password` ${st.order.type}
                    </when>
                    <when test="st.attr == 'sex'">
                        t.`sex` ${st.order.type}
                    </when>
                    <when test="st.attr == 'birthDate'">
                        t.`birth_date` ${st.order.type}
                    </when>
                    <when test="st.attr == 'userTypes'">
                        t.`user_types` ${st.order.type}
                    </when>
                    <when test="st.attr == 'state'">
                        t.`state` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastLoginTime'">
                        t.`last_login_time` ${st.order.type}
                    </when>
                    <when test="st.attr == 'createdBy'">
                        t.`created_by` ${st.order.type}
                    </when>
                    <when test="st.attr == 'createdDate'">
                        t.`created_date` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastUpdateBy'">
                        t.`last_update_by` ${st.order.type}
                    </when>
                    <when test="st.attr == 'lastUpdateDate'">
                        t.`last_update_date` ${st.order.type}
                    </when>
                </choose>
            </foreach>
        </if>
    </sql>

    <!--根据主键信息查询返回实体对象 -->
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `user` t
        where t.`id` = #{id,jdbcType=VARCHAR}
    </select>

    <!--根据实体对象信息查询返回实体对象 -->
    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `user` t
        <include refid="Base_Where_Clause" />
    </select>

    <!--根据实体对象信息查询返回实体对象集合 -->
    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `user` t
        <if test="_parameter != null">
            <include refid="Base_Where_Clause" />
        </if>
    </select>
    
    <!--根据主键信息删除实体对象 -->
    <delete id="deleteById" parameterType="java.io.Serializable">
        delete t from `user` t
        where t.`id` = #{id,jdbcType=VARCHAR}
    </delete>
    
    <!--根据实体对象删除数据-->
    <delete id="delete" parameterType="org.jboot.generator.entity.UserVO">
        delete t from `user` t
        <include refid="Base_Where_Clause" />
    </delete>

    <!--根据实体对象删除数据-->
    <delete id="deletes" parameterType="org.jboot.generator.entity.UserVO">
        delete t from `user` t where t.`id` in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>

    <!--插入实体对象 -->
    <insert id="insert" parameterType="org.jboot.generator.entity.UserVO">
        <selectKey order="BEFORE" resultType="java.lang.String" keyProperty="id">
            select uuid() 
        </selectKey>
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="userAccount != null">
                `user_account`,
            </if>
            <if test="realName != null">
                `real_name`,
            </if>
            <if test="realNameCh != null">
                `real_name_ch`,
            </if>
            <if test="phone != null">
                `phone`,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="sex != null">
                `sex`,
            </if>
            <if test="birthDate != null">
                `birth_date`,
            </if>
            <if test="userTypes != null">
                `user_types`,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="lastLoginTime != null">
                `last_login_time`,
            </if>
            <if test="createdBy != null">
                `created_by`,
            </if>
            <if test="createdDate != null or createdDate == null">
                `created_date`,
            </if>
            <if test="lastUpdateBy != null">
                `last_update_by`,
            </if>
            <if test="lastUpdateDate != null or lastUpdateDate == null">
                `last_update_date`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userAccount != null">
                #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="realNameCh != null">
                #{realNameCh,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="birthDate != null">
                #{birthDate,jdbcType=TIMESTAMP},
            </if>
            <if test="userTypes != null">
                #{userTypes,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null or createdDate == null">
                current_timestamp(),
            </if>
            <if test="lastUpdateBy != null">
                #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateDate != null or lastUpdateDate == null">
                current_timestamp(),
            </if>
        </trim>
    </insert>

    <!--插入实体对象 -->
    <insert id="inserts" parameterType="org.jboot.generator.entity.UserVO">
        insert into `user`
        <trim prefix="(" suffix=") values" suffixOverrides=",">
            `id`,
            `user_account`,
            `real_name`,
            `real_name_ch`,
            `phone`,
            `password`,
            `sex`,
            `birth_date`,
            `user_types`,
            `state`,
            `last_login_time`,
            `created_by`,
            `created_date`,
            `last_update_by`,
            `last_update_date`
        </trim>
        <foreach collection="list" item="item" index="index" separator=",">
            (
            UUID(),
            #{item.userAccount,jdbcType=VARCHAR},
            #{item.realName,jdbcType=VARCHAR},
            #{item.realNameCh,jdbcType=VARCHAR},
            #{item.phone,jdbcType=VARCHAR},
            #{item.password,jdbcType=VARCHAR},
            #{item.sex,jdbcType=VARCHAR},
            #{item.birthDate,jdbcType=TIMESTAMP},
            #{item.userTypes,jdbcType=VARCHAR},
            #{item.state,jdbcType=VARCHAR},
            #{item.lastLoginTime,jdbcType=TIMESTAMP},
            #{item.createdBy,jdbcType=VARCHAR},
            current_timestamp(),
            #{item.lastUpdateBy,jdbcType=VARCHAR},
            current_timestamp()
            )
        </foreach>
    </insert>

    <!--更新实体对象 -->
    <update id="update">
        update `user` t
        <set>
            <if test="entity.userAccount != null">
                t.`user_account` = #{entity.userAccount,jdbcType=VARCHAR},
            </if>
            <if test="entity.realName != null">
                t.`real_name` = #{entity.realName,jdbcType=VARCHAR},
            </if>
            <if test="entity.realNameCh != null">
                t.`real_name_ch` = #{entity.realNameCh,jdbcType=VARCHAR},
            </if>
            <if test="entity.phone != null">
                t.`phone` = #{entity.phone,jdbcType=VARCHAR},
            </if>
            <if test="entity.password != null">
                t.`password` = #{entity.password,jdbcType=VARCHAR},
            </if>
            <if test="entity.sex != null">
                t.`sex` = #{entity.sex,jdbcType=VARCHAR},
            </if>
            <if test="entity.birthDate != null">
                t.`birth_date` = #{entity.birthDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entity.userTypes != null">
                t.`user_types` = #{entity.userTypes,jdbcType=VARCHAR},
            </if>
            <if test="entity.state != null">
                t.`state` = #{entity.state,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastLoginTime != null">
                t.`last_login_time` = #{entity.lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="entity.lastUpdateBy != null">
                t.`last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateDate == null or entity.lastUpdateDate != null">
                t.`last_update_date` = current_timestamp(),
            </if>
        </set>
        where t.`id` = #{entity.id,jdbcType=VARCHAR}
    </update>

    <!--构造器查询 -->
    <select id="queryByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `user` t
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
        </if>
    </select>
    
    <!--构造器查询 -->
    <select id="findByWrapper" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `user` t
        <if test="wp != null">
            <include refid="Wrapper_Where_Clause" />
            <include refid="Wrapper_Order_Clause" />
        </if>
    </select>

    <!--更新实体对象 -->
    <update id="updateByWrapper">
        update `user` t
        <set>
            <if test="entity.id != null">
                t.`id` = #{entity.id,jdbcType=VARCHAR},
            </if>
            <if test="entity.userAccount != null">
                t.`user_account` = #{entity.userAccount,jdbcType=VARCHAR},
            </if>
            <if test="entity.realName != null">
                t.`real_name` = #{entity.realName,jdbcType=VARCHAR},
            </if>
            <if test="entity.realNameCh != null">
                t.`real_name_ch` = #{entity.realNameCh,jdbcType=VARCHAR},
            </if>
            <if test="entity.phone != null">
                t.`phone` = #{entity.phone,jdbcType=VARCHAR},
            </if>
            <if test="entity.password != null">
                t.`password` = #{entity.password,jdbcType=VARCHAR},
            </if>
            <if test="entity.sex != null">
                t.`sex` = #{entity.sex,jdbcType=VARCHAR},
            </if>
            <if test="entity.birthDate != null">
                t.`birth_date` = #{entity.birthDate,jdbcType=TIMESTAMP},
            </if>
            <if test="entity.userTypes != null">
                t.`user_types` = #{entity.userTypes,jdbcType=VARCHAR},
            </if>
            <if test="entity.state != null">
                t.`state` = #{entity.state,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastLoginTime != null">
                t.`last_login_time` = #{entity.lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="entity.lastUpdateBy != null">
                t.`last_update_by` = #{entity.lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="entity.lastUpdateDate == null or entity.lastUpdateDate != null">
                t.`last_update_date` = current_timestamp(),
            </if>
        </set>
        <include refid="Wrapper_Where_Clause" />
    </update>
    
    <!--根据实体对象删除数据-->
    <delete id="deleteByWrapper">
        delete t from `user` t
        <include refid="Wrapper_Where_Clause" />
    </delete>

</mapper>